package com.buyogo.traini8.service;

import com.buyogo.traini8.model.TrainingCenter;
import com.buyogo.traini8.repository.TrainingCenterRepo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import java.time.LocalTime;
import java.util.Date;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

@Service
public class TrainingService {

    @Autowired
    private TrainingCenterRepo repo;


    public ResponseEntity<Map<String, Object>> saveTrainingCenterDetail(TrainingCenter center) {

        Map<String,Object> responseBody = new LinkedHashMap<>();

        //setting time generated by server
        center.setCreatedOn(LocalTime.now());


        responseBody.put("Current Timestamp",new Date());
        responseBody.put("Data",repo.save(center));
        responseBody.put("Status",HttpStatus.CREATED.value());

        return ResponseEntity.status(HttpStatus.CREATED).body(responseBody);

    }

    public ResponseEntity<Map<String, Object>> getAllTrainingCenters(){
        Map<String,Object> responseBody = new LinkedHashMap<>();

        // This will return a list of Training Center Data
        List<TrainingCenter> centers = repo.findAll();

        responseBody.put("Current Timestamp",new Date());
        responseBody.put("Data",centers);


        if(!centers.isEmpty()) {
            // This block will call if the No data present in DataBase
            responseBody.put("Status", HttpStatus.OK.value());
            return ResponseEntity.status(HttpStatus.OK).body(responseBody);

        }else{
            // This block will call if data are present in DataBase
            responseBody.put("Status", HttpStatus.NOT_FOUND.value());
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body(responseBody);
        }

    }


    public ResponseEntity<Map<String, Object>> filterData(int capacity){

        Map<String,Object> responseBody = new LinkedHashMap<>();

        List<TrainingCenter> centers = repo.findByStudentCapacity(capacity);

        responseBody.put("Current Timestamp",new Date());
        responseBody.put("Data",centers);

        if(!centers.isEmpty()) {
            // This block will call if the No data present in DataBase
            responseBody.put("Status", HttpStatus.OK.value());
            return ResponseEntity.status(HttpStatus.OK).body(responseBody);

        }else{
            // This block will call if data are present in DataBase
            responseBody.put("Status", HttpStatus.NOT_FOUND.value());
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body(responseBody);
        }

    }

    public ResponseEntity<Map<String, Object>> filterData(String city){

        Map<String,Object> responseBody = new LinkedHashMap<>();

        List<TrainingCenter> centers = repo.findByCity(city);

        responseBody.put("Current Timestamp",new Date());
        responseBody.put("Data",centers);

        if(!centers.isEmpty()) {
            // This block will call if the No data present in DataBase
            responseBody.put("Status", HttpStatus.OK.value());
            return ResponseEntity.status(HttpStatus.OK).body(responseBody);

        }else{
            // This block will call if data are present in DataBase
            responseBody.put("Status", HttpStatus.NOT_FOUND.value());
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body(responseBody);
        }

    }


}
